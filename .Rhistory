library(dplyr)
library(rstatix)
library(dplyr)
library(rstatix)
library(lmtest)
library(car)
library(ggpubr)
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
df$num_species <- 0
head(df)
df$num_species <- switch(df$Species,
"Actitis hypoleucos" = 1,
"Arenaria interpres" = 2,
"Calidris alpina" = 3,
"Calidris canutus" = 4,
"Calidris ferruginea" = 5,
"Calidris minuta" = 6,
"Calidris temminckii" = 7,
"Charadrius dubius" = 8,
"Charadrius hiaticula" = 9,
"Limicola falcinellus" = 10,
"Limosa lapponica" = 11,
"Philomachus pugnax" = 12,
"Pluvialis squatarola" = 13,
"Tringa erythropus" = 14,
"Tringa glareola" = 15,
"Tringa nebularia" = 16,
"Tringa ochropus" = 17,
"Tringa totanus" = 18,
"Vanellus vanellus" = 19
)
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
df$num_species <- switch(df$Species,
"Actitis hypoleucos" = 1,
"Arenaria interpres" = 2,
"Calidris alpina" = 3,
"Calidris canutus" = 4,
"Calidris ferruginea" = 5,
"Calidris minuta" = 6,
"Calidris temminckii" = 7,
"Charadrius dubius" = 8,
"Charadrius hiaticula" = 9,
"Limicola falcinellus" = 10,
"Limosa lapponica" = 11,
"Philomachus pugnax" = 12,
"Pluvialis squatarola" = 13,
"Tringa erythropus" = 14,
"Tringa glareola" = 15,
"Tringa nebularia" = 16,
"Tringa ochropus" = 17,
"Tringa totanus" = 18,
"Vanellus vanellus" = 19
)
df$num_species <- switch(df$Species,
"Actitis hypoleucos" = 1,
"Arenaria interpres" = 2,
"Calidris alpina" = 3,
"Calidris canutus" = 4,
"Calidris ferruginea" = 5,
"Calidris minuta" = 6,
"Calidris temminckii" = 7,
"Charadrius dubius" = 8,
"Charadrius hiaticula" = 9,
"Limicola falcinellus" = 10,
"Limosa lapponica" = 11,
"Philomachus pugnax" = 12,
"Pluvialis squatarola" = 13,
"Tringa erythropus" = 14,
"Tringa glareola" = 15,
"Tringa nebularia" = 16,
"Tringa ochropus" = 17,
"Tringa totanus" = 18,
"Vanellus vanellus" = 19,
NA
)
df$num_species <- switch(df$Species,
"Actitis hypoleucos" = 1,
"Arenaria interpres" = 2,
"Calidris alpina" = 3,
"Calidris canutus" = 4,
"Calidris ferruginea" = 5,
"Calidris minuta" = 6,
"Calidris temminckii" = 7,
"Charadrius dubius" = 8,
"Charadrius hiaticula" = 9,
"Limicola falcinellus" = 10,
"Limosa lapponica" = 11,
"Philomachus pugnax" = 12,
"Pluvialis squatarola" = 13,
"Tringa erythropus" = 14,
"Tringa glareola" = 15,
"Tringa nebularia" = 16,
"Tringa ochropus" = 17,
"Tringa totanus" = 18,
"Vanellus vanellus" = 19
)
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
df$num_species <- switch(df$Species,
"Actitis hypoleucos" = 1,
"Arenaria interpres" = 2,
"Calidris alpina" = 3,
"Calidris canutus" = 4,
"Calidris ferruginea" = 5,
"Calidris minuta" = 6,
"Calidris temminckii" = 7,
"Charadrius dubius" = 8,
"Charadrius hiaticula" = 9,
"Limicola falcinellus" = 10,
"Limosa lapponica" = 11,
"Philomachus pugnax" = 12,
"Pluvialis squatarola" = 13,
"Tringa erythropus" = 14,
"Tringa glareola" = 15,
"Tringa nebularia" = 16,
"Tringa ochropus" = 17,
"Tringa totanus" = 18,
"Vanellus vanellus" = 19
)
#df_2 <- df[df$Species == "Calidris temminckii",]
#linha <- nrow(df_2)
#linha
df$num_species <- 0
head(df)
df$num_species <- switch(df$Species,
"Actitis hypoleucos" = 1,
"Arenaria interpres" = 2,
"Calidris alpina" = 3,
"Calidris canutus" = 4,
"Calidris ferruginea" = 5,
"Calidris minuta" = 6,
"Calidris temminckii" = 7,
"Charadrius dubius" = 8,
"Charadrius hiaticula" = 9,
"Limicola falcinellus" = 10,
"Limosa lapponica" = 11,
"Philomachus pugnax" = 12,
"Pluvialis squatarola" = 13,
"Tringa erythropus" = 14,
"Tringa glareola" = 15,
"Tringa nebularia" = 16,
"Tringa ochropus" = 17,
"Tringa totanus" = 18,
"Vanellus vanellus" = 19
)
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
df$num_species <- switch(df$Species,
"Actitis hypoleucos" = 1,
"Arenaria interpres" = 2,
"Calidris alpina" = 3,
"Calidris canutus" = 4,
"Calidris ferruginea" = 5,
"Calidris minuta" = 6,
"Calidris temminckii" = 7,
"Charadrius dubius" = 8,
"Charadrius hiaticula" = 9,
"Limicola falcinellus" = 10,
"Limosa lapponica" = 11,
"Philomachus pugnax" = 12,
"Pluvialis squatarola" = 13,
"Tringa erythropus" = 14,
"Tringa glareola" = 15,
"Tringa nebularia" = 16,
"Tringa ochropus" = 17,
"Tringa totanus" = 18,
"Vanellus vanellus" = 19,
NA
)
# Suponha que você tenha um dataframe chamado 'df' com uma coluna 'Species'
df$num_species <- switch(df$Species,
"Actitis hypoleucos" = 1,
"Arenaria interpres" = 2,
"Calidris alpina" = 3,
"Calidris canutus" = 4,
"Calidris ferruginea" = 5,
"Calidris minuta" = 6,
"Calidris temminckii" = 7,
"Charadrius dubius" = 8,
"Charadrius hiaticula" = 9,
"Limicola falcinellus" = 10,
"Limosa lapponica" = 11,
"Philomachus pugnax" = 12,
"Pluvialis squatarola" = 13,
"Tringa erythropus" = 14,
"Tringa glareola" = 15,
"Tringa nebularia" = 16,
"Tringa ochropus" = 17,
"Tringa totanus" = 18,
"Vanellus vanellus" = 19,
NA)
head(df)
df$num_species <- switch(df$FatScore,
1="um",
df$num_species <- switch(df$FatScore,
1 = "um",
df$num_species <- 1
df$num_species <- switch(df$FatScore,
1 = "um",
df$num_species <- switch(df$num_species,
1 = "um",
df$num_species <- switch(df$num_species,
1 = "um",
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
head(df)
summary(df)
cbind(table(df$Species))
par(mfrow = c(2,4))
for (coluna in c(2:9)) {
variavel <- names(df)[coluna]
boxplot(df[coluna],main = variavel)
}
df_na <- df[!complete.cases(df),]
head(df_na)
linhas_na <- nrow(df_na)
linhas_df <- nrow(df)
linhas_na
cat("A base de dados possui",linhas_df, "observacoes e",linhas_na, "linhas contendo ao menos um NA")
colSums(df)
colSums(df$FatScore)
colSums(df$FatScore,df$BodyMass)
cbind(colSums(is.na(df)))
media_bm <- mean(df$BodyMass,na.rm = TRUE)
media_bm
median_bm <- median(df$BodyMass,na.rm = TRUE)
median_bm
df$BodyMass <- (replace(x = df$BodyMass,
list = is.na(df$BodyMass),
values = median_bm)
)
cbind(colSums(is.na(df)))
head(df_na)
df_na <- df[!complete.cases(df),]
head(df_na)
modelo <- lm(FatScore~ BodyMass + Heterophils + Lymphocytes + Eosinophils + Monocytes + Basophils + HLRatio, data = df)
par(mfrow = c(2,2))
plot(modelo)
pairs.panels(df[,-1])
par(mfrow = c(2,2))
plot(modelo)
knitr::opts_chunk$set(echo = TRUE)
boxplot(df$FatScore~df$Species)
par(mfrow = c(8,1))
par(mfrow = c(8,1))
for (coluna in c(2:9)) {
variavel <- names(df)[coluna]
boxplot(df[,coluna] ~df[,10],main = variavel)
}
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
par(mfrow = c(2,4))
for (coluna in c(2:9)) {
variavel <- names(df)[coluna]
boxplot(df[,coluna],main = variavel)
}
# Função para extrair a primeira palavra de uma string
extrair_primeira_palavra <- function(string) {
palavras <- strsplit(string, " ")[[1]]
primeira_palavra <- palavras[1]
return(primeira_palavra)
}
df$Genero <- sapply(df$Species, extrair_primeira_palavra)
cbind(table(df$Genero))
par(mfrow = c(8,1))
for (coluna in c(2:9)) {
variavel <- names(df)[coluna]
boxplot(df[,coluna] ~df[,10],main = variavel)
}
# Instalando e carregando o pacote MASS
install.packages("MASS")
install.packages("MASS")
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
# Ajustando um modelo de regressão de Negative Binomial
modelo <- glm.nb(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
# Visualizando os resultados
summary(modelo)
par(mfrow=c(2,2))
plot(modelo)
# Instalando e carregando o pacote rpart
install.packages("rpart")
library(rpart)
# Ajustando um modelo de árvore de decisão
modelo <- rpart(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
# Visualizando a árvore de decisão
print(modelo)
par(mfrow=c(2,2))
plot(modelo)
step(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
modelo
par(mfrow = c(2,2))
plot(modelo)
step(modelo)
hist(modelo$residuals)
summary(modelo)
anova(modelo)
AIC(modelo)
modelo_2 <- glm(formula = FatScore ~ Monocytes + Genero, data = df)
par(mfrow=c(2,2))
plot(modelo_2)
hnp::hnp(modelo_2$residuals)
# Ajustando um modelo de regressão de Negative Binomial
modelo <- glm.nb(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
par(mfrow=c(2,2))
plot(modelo)
ggregate(HLRatio ~ Species, data = df, mean)
summary(modelo)
# Ajustando um modelo de regressão de Negative Binomial
modelo <- glm.nb(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
hist(modelo$residuals)
hnp::hnp(modelo_2$residuals)
par(mfrow=c(2,2))
plot(modelo)
# Carregando o pacote
library(MASS)
# Ajustando um modelo de Poisson Quase (QPR)
modelo_qpr <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = quasipoisson())
# Visualizando os resultados
summary(modelo_qpr)
par(mfrow=c(2,2))
plot(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Species, data = df)
modelo
par(mfrow = c(2,2))
plot(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
# Ajustando um modelo de regressão de Poisson
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
# Visualizando os resultados
summary(modelo)
par(mfrow=c(2,2))
plot(modelo)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão de Poisson
df <- df[c(180,247,355),]
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
# Ajustando um modelo de regressão de Poisson
df <- df[c(-180,-247,-355),]
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
# Função para extrair a primeira palavra de uma string
extrair_primeira_palavra <- function(string) {
palavras <- strsplit(string, " ")[[1]]
primeira_palavra <- palavras[1]
return(primeira_palavra)
}
df$Genero <- sapply(df$Species, extrair_primeira_palavra)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão de Poisson
df <- df[c(-244,-251,-246),]
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão de Poisson
df <- df[c(-244,-251,-246),]
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão de Poisson
df <- df[c(-28,-82,-56),]
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils , data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão geométrica
modelo_geom <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils , data = df, family = Gamma(link = "log"))
summary(df)
# Ajustando um modelo de regressão geométrica
modelo_geom <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils , data = df, family = Gamma(link = "inverse"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0, 0.005, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(variavel_dependente_corrigida ~ preditor1 + preditor2, data = data, family = Gamma(link = "inverse"))
head(df)
summary(df)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(variavel_dependente_corrigida ~ preditor1 + preditor2, data = data, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0,005, 0.05, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(variavel_dependente_corrigida ~ preditor1 + preditor2, data = data, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = data, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
par(mfrow=c(2,2))
plot(modelo)
par(mfrow=c(2,2))
plot(modelo)
summary(df)
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
# Função para extrair a primeira palavra de uma string
extrair_primeira_palavra <- function(string) {
palavras <- strsplit(string, " ")[[1]]
primeira_palavra <- palavras[1]
return(primeira_palavra)
}
df$Genero <- sapply(df$Species, extrair_primeira_palavra)
df_na <- df[!complete.cases(df),]
head(df_na)
# Função para substituir os valores NA pela mediana, agrupada pelo Genero
substituir_na_pela_mediana <- function(valor) {
mediana <- median(valor, na.rm = TRUE)
valor[is.na(valor)] <- mediana
return(valor)
}
#Substituição levando em consideração o Genero
df$BodyMass <- ave(df$BodyMass, df$Genero, FUN = substituir_na_pela_mediana)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
par(mfrow = c(2,2))
plot(modelo)
modelo_2 <- glm(formula = FatScore ~ Monocytes + Genero, data = df)
modelo <- glm(formula = FatScore ~ Monocytes + Genero, data = df)
par(mfrow=c(2,2))
plot(modelo)
# Instalando e carregando o pacote MASS
install.packages("MASS")
install.packages("MASS")
library(MASS)
# Ajustando um modelo de regressão de Negative Binomial
modelo <- glm.nb(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
knitr::opts_chunk$set(echo = TRUE)
par(mfrow=c(2,2))
plot(modelo)
_qpr
# Ajustando um modelo de Poisson Quase (QPR)
modelo_qpr <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = quasipoisson())
par(mfrow=c(2,2))
plot(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils , data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0, 0.05, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.05, 0.0005, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.05, 0.005, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.05, 0.01, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.05, 0.03, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
summary(df)
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.0005, 0.005, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
par(mfrow=c(2,2))
plot(modelo)
summary(df)
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.005, 1, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
par(mfrow=c(2,2))
plot(modelo)
