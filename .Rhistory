df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
head(df)
summary(df)
cbind(table(df$Species))
par(mfrow = c(2,4))
for (coluna in c(2:9)) {
variavel <- names(df)[coluna]
boxplot(df[coluna],main = variavel)
}
df_na <- df[!complete.cases(df),]
head(df_na)
linhas_na <- nrow(df_na)
linhas_df <- nrow(df)
linhas_na
cat("A base de dados possui",linhas_df, "observacoes e",linhas_na, "linhas contendo ao menos um NA")
colSums(df)
colSums(df$FatScore)
colSums(df$FatScore,df$BodyMass)
cbind(colSums(is.na(df)))
media_bm <- mean(df$BodyMass,na.rm = TRUE)
media_bm
median_bm <- median(df$BodyMass,na.rm = TRUE)
median_bm
df$BodyMass <- (replace(x = df$BodyMass,
list = is.na(df$BodyMass),
values = median_bm)
)
cbind(colSums(is.na(df)))
head(df_na)
df_na <- df[!complete.cases(df),]
head(df_na)
modelo <- lm(FatScore~ BodyMass + Heterophils + Lymphocytes + Eosinophils + Monocytes + Basophils + HLRatio, data = df)
par(mfrow = c(2,2))
plot(modelo)
pairs.panels(df[,-1])
par(mfrow = c(2,2))
plot(modelo)
knitr::opts_chunk$set(echo = TRUE)
boxplot(df$FatScore~df$Species)
par(mfrow = c(8,1))
par(mfrow = c(8,1))
for (coluna in c(2:9)) {
variavel <- names(df)[coluna]
boxplot(df[,coluna] ~df[,10],main = variavel)
}
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
par(mfrow = c(2,4))
for (coluna in c(2:9)) {
variavel <- names(df)[coluna]
boxplot(df[,coluna],main = variavel)
}
# Função para extrair a primeira palavra de uma string
extrair_primeira_palavra <- function(string) {
palavras <- strsplit(string, " ")[[1]]
primeira_palavra <- palavras[1]
return(primeira_palavra)
}
df$Genero <- sapply(df$Species, extrair_primeira_palavra)
cbind(table(df$Genero))
par(mfrow = c(8,1))
for (coluna in c(2:9)) {
variavel <- names(df)[coluna]
boxplot(df[,coluna] ~df[,10],main = variavel)
}
# Instalando e carregando o pacote MASS
install.packages("MASS")
install.packages("MASS")
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
# Ajustando um modelo de regressão de Negative Binomial
modelo <- glm.nb(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
# Visualizando os resultados
summary(modelo)
par(mfrow=c(2,2))
plot(modelo)
# Instalando e carregando o pacote rpart
install.packages("rpart")
library(rpart)
# Ajustando um modelo de árvore de decisão
modelo <- rpart(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
# Visualizando a árvore de decisão
print(modelo)
par(mfrow=c(2,2))
plot(modelo)
step(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
modelo
par(mfrow = c(2,2))
plot(modelo)
step(modelo)
hist(modelo$residuals)
summary(modelo)
anova(modelo)
AIC(modelo)
modelo_2 <- glm(formula = FatScore ~ Monocytes + Genero, data = df)
par(mfrow=c(2,2))
plot(modelo_2)
hnp::hnp(modelo_2$residuals)
# Ajustando um modelo de regressão de Negative Binomial
modelo <- glm.nb(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
par(mfrow=c(2,2))
plot(modelo)
ggregate(HLRatio ~ Species, data = df, mean)
summary(modelo)
# Ajustando um modelo de regressão de Negative Binomial
modelo <- glm.nb(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
hist(modelo$residuals)
hnp::hnp(modelo_2$residuals)
par(mfrow=c(2,2))
plot(modelo)
# Carregando o pacote
library(MASS)
# Ajustando um modelo de Poisson Quase (QPR)
modelo_qpr <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = quasipoisson())
# Visualizando os resultados
summary(modelo_qpr)
par(mfrow=c(2,2))
plot(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Species, data = df)
modelo
par(mfrow = c(2,2))
plot(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
# Ajustando um modelo de regressão de Poisson
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
# Visualizando os resultados
summary(modelo)
par(mfrow=c(2,2))
plot(modelo)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão de Poisson
df <- df[c(180,247,355),]
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
# Ajustando um modelo de regressão de Poisson
df <- df[c(-180,-247,-355),]
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
# Função para extrair a primeira palavra de uma string
extrair_primeira_palavra <- function(string) {
palavras <- strsplit(string, " ")[[1]]
primeira_palavra <- palavras[1]
return(primeira_palavra)
}
df$Genero <- sapply(df$Species, extrair_primeira_palavra)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão de Poisson
df <- df[c(-244,-251,-246),]
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão de Poisson
df <- df[c(-244,-251,-246),]
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão de Poisson
df <- df[c(-28,-82,-56),]
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils , data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão geométrica
modelo_geom <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils , data = df, family = Gamma(link = "log"))
summary(df)
# Ajustando um modelo de regressão geométrica
modelo_geom <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils , data = df, family = Gamma(link = "inverse"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0, 0.005, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(variavel_dependente_corrigida ~ preditor1 + preditor2, data = data, family = Gamma(link = "inverse"))
head(df)
summary(df)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(variavel_dependente_corrigida ~ preditor1 + preditor2, data = data, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0,005, 0.05, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(variavel_dependente_corrigida ~ preditor1 + preditor2, data = data, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = data, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo_geom_exponencial <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
par(mfrow=c(2,2))
plot(modelo)
par(mfrow=c(2,2))
plot(modelo)
summary(df)
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
# Função para extrair a primeira palavra de uma string
extrair_primeira_palavra <- function(string) {
palavras <- strsplit(string, " ")[[1]]
primeira_palavra <- palavras[1]
return(primeira_palavra)
}
df$Genero <- sapply(df$Species, extrair_primeira_palavra)
df_na <- df[!complete.cases(df),]
head(df_na)
# Função para substituir os valores NA pela mediana, agrupada pelo Genero
substituir_na_pela_mediana <- function(valor) {
mediana <- median(valor, na.rm = TRUE)
valor[is.na(valor)] <- mediana
return(valor)
}
#Substituição levando em consideração o Genero
df$BodyMass <- ave(df$BodyMass, df$Genero, FUN = substituir_na_pela_mediana)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
par(mfrow = c(2,2))
plot(modelo)
modelo_2 <- glm(formula = FatScore ~ Monocytes + Genero, data = df)
modelo <- glm(formula = FatScore ~ Monocytes + Genero, data = df)
par(mfrow=c(2,2))
plot(modelo)
# Instalando e carregando o pacote MASS
install.packages("MASS")
install.packages("MASS")
library(MASS)
# Ajustando um modelo de regressão de Negative Binomial
modelo <- glm.nb(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df)
knitr::opts_chunk$set(echo = TRUE)
par(mfrow=c(2,2))
plot(modelo)
_qpr
# Ajustando um modelo de Poisson Quase (QPR)
modelo_qpr <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df, family = quasipoisson())
par(mfrow=c(2,2))
plot(modelo)
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils , data = df, family = poisson)
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0, 0.05, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
par(mfrow=c(2,2))
plot(modelo)
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.05, 0.0005, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.05, 0.005, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.05, 0.01, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.05, 0.03, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
summary(df)
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.0005, 0.005, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
par(mfrow=c(2,2))
plot(modelo)
summary(df)
# Ajustando um modelo de regressão geométrica
# Adicionando um pseudocount aos valores zero
df$FatScore <- ifelse(df$FatScore == 0.005, 1, df$FatScore)
# Ajustando um modelo de regressão geométrica com ligação exponencial
modelo <- glm(FatScore ~ BodyMass + Heterophils + Eosinophils + Monocytes + Basophils, data = df, family = Gamma(link = "log"))
par(mfrow=c(2,2))
plot(modelo)
summary(modelo_lm_c)
library(psych)
library(summarytools)
library(performance)
library(MASS)
library(dplyr)
library(rstatix)
library(lmtest)
library(ggpubr)
library(nnet)
library(tidyr)
library(car)
library(agricolae)
library(ExpDes.pt)
library(hnp)
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
df <- read.csv('https://raw.githubusercontent.com/JessicaHemily/COMP_1/main/LeukocyteProfiles.csv/LeukocyteProfiles.csv',
header = TRUE,
sep = ',')
head(df)
# Função para extrair a primeira palavra de uma string
extrair_primeira_palavra <- function(string) {
palavras <- strsplit(string, " ")[[1]]
primeira_palavra <- palavras[1]
return(primeira_palavra)
}
df$Genero <- sapply(df$Species, extrair_primeira_palavra)
df$Familia <- ifelse(df$Genero %in% c('Charadrius', 'Pluvialis', 'Vanellus') ,'Charadriidae','Scolopacidae')
# Função para substituir os valores NA pela mediana, agrupada pelo Genero
substituir_na_pela_mediana <- function(valor) {
mediana <- median(valor, na.rm = TRUE)
valor[is.na(valor)] <- mediana
return(valor)
}
#Substituição levando em consideração o Genero
df$BodyMass <- ave(df$BodyMass, df$Genero, FUN = substituir_na_pela_mediana)
fit <- aov(HLRatio ~ Genero,df) # Fisher-Snedecor
anova(fit)
bartlett.test(df$HLRatio ~ df$Genero,df)
shapiro.test(fit$residuals) #verificar normalidade (variancias homogeneas)
LSD.test(fit, 'Genero', console = T, group = TRUE)
df_1 <- df
# Excluir as linhas 410, 411 e 414
df_1 <- subset(df_1, !(rownames(df_1) %in% c("60", "271", "363")))
modelo_lm_1 <- lm(HLRatio ~ FatScore + BodyMass + Heterophils + Eosinophils + Monocytes + Basophils + Genero, data = df_1)
modelo_lm_1
shapiro.test(modelo_lm_1$residuals)
df_2 <- df
# Excluir as linhas 410, 411 e 414
df_2 <- subset(df_2, !(rownames(df_2) %in% c("60", "271", "363")))
shapiro.test(modelo_lm_2$residuals)
modelo_lm_2 <- lm(HLRatio ~ FatScore + Lymphocytes + BodyMass + Eosinophils + Monocytes + Basophils + Genero, data = df_2)
modelo_lm_2
shapiro.test(modelo_lm_2$residuals)
summary(rstandard(modelo_lm_2))
bptest(modelo_lm_2)
library(psych)
library(summarytools)
library(performance)
library(MASS)
library(dplyr)
library(rstatix)
library(lmtest)
library(ggpubr)
library(nnet)
library(tidyr)
library(car)
library(agricolae)
library(ExpDes.pt)
library(hnp)
LSD.test(fit, 'Genero', console = T, group = TRUE)
shapiro.test(modelo_lm_1$residuals)
summary(rstandard(modelo_lm_1))
bptest(modelo_lm_1)
df_2 <- df
# Excluir as linhas 410, 411 e 414
df_2 <- subset(df_2, !(rownames(df_2) %in% c("60", "271", "363")))
modelo_lm_2 <- lm(HLRatio ~ FatScore + Lymphocytes + BodyMass + Eosinophils + Monocytes + Basophils + Genero, data = df_2)
shapiro.test(modelo_lm_2$residuals)
summary(rstandard(modelo_lm_2))
bptest(modelo_lm_2)
df_3 <- df
# Excluir as linhas 410, 411 e 414
df_3 <- subset(df_3, !(rownames(df_3) %in% c("60", "271", "363")))
modelo_glm_3 <- glm(HLRatio ~ FatScore + BodyMass + Lymphocytes + Eosinophils + Monocytes + Basophils + Genero, data = df_3, family = gaussian(link = "inverse"))
modelo_glm_3 <- glm(HLRatio ~ FatScore + BodyMass + Lymphocytes + Eosinophils + Monocytes + Basophils + Genero, data = df_3, family = gaussian(link = "log"))
modelo_glm_3
shapiro.test(modelo_glm_3$residuals)
summary(rstandard(modelo_glm_3))
bptest(modelo_glm_3)
modelo_glm_3 <- glm(HLRatio ~ FatScore + BodyMass + Lymphocytes + Eosinophils + Monocytes + Basophils + Genero, data = df_3, family = gaussian(link = "inverse"))
shapiro.test(modelo_glm_3$residuals)
summary(rstandard(modelo_glm_3))
bptest(modelo_glm_3)
step(modelo_glm_3)
df_4 <- df
# Excluir as linhas 410, 411 e 414
df_4 <- subset(df_4, !(rownames(df_4) %in% c("60", "137", "363")))
modelo_glm_4 <- glm(formula = HLRatio ~ FatScore + BodyMass + Lymphocytes + Eosinophils + Monocytes + Basophils + Genero,data = df_4, family = gaussian(link = "inverse"))
shapiro.test(modelo_glm_4$residuals)
summary(rstandard(modelo_glm_4))
bptest(modelo_glm_4)
#df_4 <- df_1[-c(1,137,411),]
df_5 <- df
# Excluir as linhas 410, 411 e 414
df_5 <- subset(df, !(rownames(df) %in% c("60", "137", "363")))
modelo_poli_5 <- lm(HLRatio ~ poly(FatScore + Lymphocytes + Eosinophils + Basophils, 2), data = df_5)
table(df$Familia)
df_Charadriidae <- subset(df,df$Familia=="Charadriidae")
df_Scolopacidae <- subset(df,df$Familia=="Scolopacidae")
df_Charadriidae_1 <- subset(df_Charadriidae, !(rownames(df_Charadriidae) %in% c("410", "411", "414")))
modelo_lm_c <- lm(HLRatio ~ FatScore + BodyMass + Lymphocytes + Eosinophils + Monocytes + Basophils + Genero , data = df_Charadriidae_1)
modelo_lm_c
summary(modelo_lm_c)
modelo_lm_c1 <- lm(HLRatio ~  Lymphocytes + Eosinophils + Monocytes + Basophils, data = df_Charadriidae)
summary(modelo_lm_c)
modelo_lm_c1 <- lm(HLRatio ~  FatScore + Lymphocytes + Eosinophils + Monocytes + Basophils, data = df_Charadriidae)
summary(modelo_lm_c1)
modelo_lm_c1 <- lm(HLRatio ~ Lymphocytes + Eosinophils + Monocytes + Basophils, data = df_Charadriidae)
shapiro.test(modelo_lm_c1$residuals)
summary(rstandard(modelo_lm_c1))
bptest(modelo_lm_c1)
df_Charadriidae_2 <- df_Charadriidae
df_Charadriidae_2 <- subset(df_Charadriidae_2, !(rownames(df_Charadriidae_2) %in% c("173","410", "411")))
modelo_poli_c2 <- lm(HLRatio ~ poly(FatScore + Lymphocytes + Eosinophils + Basophils, 2), data = df_Charadriidae)
shapiro.test(modelo_poli_c2$residuals)
summary(rstandard(modelo_poli_c2))
bptest(modelo_poli_c2)
AIC(modelo_lm_c,modelo_lm_c1,modelo_poli_c2)
Pred <- predict(modelo_lm_c, df_Charadriidae_1)
actuals_preds <- data.frame(cbind(actuals = df_Charadriidae_1$HLRatio,predicteds = Pred))
head(actuals_preds)
shapiro.test(modelo_lm_c$residuals)
summary(rstandard(modelo_lm_c))
bptest(modelo_lm_c)
table(df$Genero)
df_actitis <- subset(df,df$Genero=="Actitis")
head(df_actitis)
df_arenaria <- subset(df,df$Genero=="Arenaria")
head(df_arenaria)
df_calidris <- subset(df,df$Genero=="Calidris")
head(df_calidris)
df_charadrius <- subset(df,df$Genero=="Charadrius")
head(df_charadrius)
df_limicola <- subset(df,df$Genero=="Limicola")
head(df_limicola)
df_limosa <- subset(df,df$Genero=="Limosa")
head(df_limosa)
df_philomachus <- subset(df,df$Genero=="Philomachus")
head(df_philomachus)
boxplot(df_actitis$HLRatio)
modelo_lm_a <- lm(HLRatio ~ FatScore + BodyMass + Lymphocytes + Eosinophils + Monocytes + Basophils , data = df_actitis)
modelo_lm_a
summary(modelo_lm_a)
modelo_lm_a1 <- lm(HLRatio ~ Lymphocytes + Eosinophils , data = df_actitis)
summary(modelo_lm_a1)
shapiro.test(modelo_lm_a1$residuals)
summary(rstandard(modelo_lm_a1))
bptest(modelo_lm_a1)
par(mfrow = c(2,2))
plot(modelo_lm_a1)
modelo_poli_a2 <- lm(HLRatio ~ poly(FatScore + Lymphocytes + Eosinophils + Basophils, 2), data = df_actitis)
summary(modelo_poli_a2)
par(mfrow = c(2,2))
plot(modelo_poli_a2)
shapiro.test(modelo_poli_a2$residuals)
summary(rstandard(modelo_poli_a2))
bptest(modelo_poli_a2)
modelo_glm_a3 <- glm(formula = HLRatio ~ FatScore + BodyMass + Lymphocytes + Eosinophils + Monocytes + Basophils,data = df_actitis, family = gaussian(link = "inverse"))
par(mfrow=c(2,2))
plot(modelo_glm_a3)
shapiro.test(modelo_glm_a3$residuals)
summary(rstandard(modelo_glm_a3))
bptest(modelo_glm_a3)
AIC(modelo_lm_a1,modelo_poli_a2,modelo_lm_a,modelo_glm_a3)
cor(actuals_preds,8)
cor(actuals_preds,8)
head(actuals_preds,8)
modelo_limosa_1 <- glm(HLRatio ~ FatScore + BodyMass + Lymphocytes + Eosinophils + Monocytes + Basophils , data = df_limosa)
modelo_limosa_1
par(mfrow = c(2,2))
plot(modelo_limosa_1)
modelo_limosa_2 <- glm(HLRatio ~ FatScore + BodyMass + Eosinophils + Monocytes + Basophils, data = df_limosa)
par(mfrow = c(2,2))
plot(modelo_limosa_2)
AIC(modelo_limosa_1,modelo_limosa_2)
shapiro.test(modelo_limosa_1$residuals)
summary(rstandard(modelo_limosa_1))
bptest(modelo_limosa_1)
par(mfrow = c(1,2))
hist(modelo_limosa_1$residuals)
hnp::hnp(modelo_limosa_1$residuals)
shapiro.test(modelo_limosa_2$residuals)
summary(rstandard(modelo_limosa_2))
bptest(modelo_limosa_2)
Pred <- predict(modelo_limosa_1, df_actitis)
Pred <- predict(modelo_limosa_1, df_limosa)
actuals_preds <- data.frame(cbind(actuals = df_limosa$HLRatio,predicteds = Pred))
head(actuals_preds,8)
cor(actuals_preds)
modelo_lm_a <- lm(HLRatio ~ FatScore + BodyMass + Eosinophils + Monocytes + Basophils , data = df_actitis)
modelo_lm_a
modelo_lm_a1 <- lm(HLRatio ~  Eosinophils , data = df_actitis)
par(mfrow = c(2,2))
plot(modelo_lm_a1)
shapiro.test(modelo_lm_a1$residuals)
summary(rstandard(modelo_lm_a1))
bptest(modelo_lm_a1)
par(mfrow = c(1,2))
hist(modelo_lm_a1$residuals)
hnp::hnp(modelo_lm_a1$residuals)
